name: ML Pipeline CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # Run tests
      - name: Run tests
        env:
          PYTHONPATH: .
        run: |
          pytest test.py -v --junitxml=test-results.xml

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t sepsis-pipeline:latest .

      # Test Docker image build
      - name: Test Docker image
        run: |
          docker run --rm sepsis-pipeline:latest python -c "import xgboost; print('XGBoost imported successfully')"

      # Upload test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xml

  pipeline-check:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Create sample data for pipeline run
      - name: Create sample data
        run: |
          mkdir -p data/raw
          echo "Patient_ID,Age,Gender,Heart_Rate,BP_Systolic,BP_Diastolic,Temperature,Respiratory_Rate,WBC_Count,Lactate_Level,Comorbidities,Clinical_Notes,Sepsis_Label" > data/raw/sepsis_datasets.csv
          echo "1,65,M,90,120,80,37.5,16,10.5,2.5,Diabetes,Fever and chills,1" >> data/raw/sepsis_datasets.csv
          echo "2,45,F,85,130,85,36.8,18,8.5,1.8,None,Normal,0" >> data/raw/sepsis_datasets.csv

      # Run pipeline with monitoring and retraining
      - name: Run pipeline
        env:
          PYTHONPATH: .
        run: |
          python pipeline.py --monitor --retrain_if_needed